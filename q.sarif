{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "name": "JFrog Xray SCA",
          "rules": [
            {
              "id": "CVE-2022-35949_undici_5.8.0",
              "shortDescription": {
                "text": "[CVE-2022-35949] undici 5.8.0"
              },
              "help": {
                "text": "undici is an HTTP/1.1 client, written from scratch for Node.js.`undici` is vulnerable to SSRF (Server-side Request Forgery) when an application takes in **user input** into the `path/pathname` option of `undici.request`. If a user specifies a URL such as `http://127.0.0.1` or `//127.0.0.1` ```js const undici = require(\"undici\") undici.request({origin: \"http://example.com\", pathname: \"//127.0.0.1\"}) ``` Instead of processing the request as `http://example.org//127.0.0.1` (or `http://example.org/http://127.0.0.1` when `http://127.0.0.1 is used`), it actually processes the request as `http://127.0.0.1/` and sends it to `http://127.0.0.1`. If a developer passes in user input into `path` parameter of `undici.request`, it can result in an _SSRF_ as they will assume that the hostname cannot change, when in actual fact it can change because the specified path parameter is combined with the base URL. This issue was fixed in `undici@5.8.1`. The best workaround is to validate user input before passing it to the `undici.request` call.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `undici 5.8.0`       | [5.8.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-0624_parse-path_4.0.4",
              "shortDescription": {
                "text": "[CVE-2022-0624] parse-path 4.0.4"
              },
              "help": {
                "text": "Authorization Bypass Through User-Controlled Key in GitHub repository ionicabizau/parse-path prior to 5.0.0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Not Covered       | `parse-url 6.0.5`       | [5.0.0]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2024-45296_path-to-regexp_0.1.7",
              "shortDescription": {
                "text": "[CVE-2024-45296] path-to-regexp 0.1.7"
              },
              "help": {
                "text": "path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. Because JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and lead to a DoS. The bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (.). For users of 0.1, upgrade to 0.1.10. All other users should upgrade to 8.0.0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `express 4.19.2`       | [0.1.10], [1.9.0], [3.3.0], [6.3.0], [8.0.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-52798_path-to-regexp_0.1.7",
              "shortDescription": {
                "text": "[CVE-2024-52798] path-to-regexp 0.1.7"
              },
              "help": {
                "text": "path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. The regular expression that is vulnerable to backtracking can be generated in the 0.1.x release of path-to-regexp. Upgrade to 0.1.12. This vulnerability exists because of an incomplete fix for CVE-2024-45296.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `express 4.19.2`       | [0.1.12]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-43800_serve-static_1.15.0",
              "shortDescription": {
                "text": "[CVE-2024-43800] serve-static 1.15.0"
              },
              "help": {
                "text": "serve-static serves static files. serve-static passes untrusted user input - even after sanitizing it - to redirect() may execute untrusted code. This issue is patched in serve-static 1.16.0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.7      | Not Covered       | `express 4.19.2`       | [1.16.0], [2.1.0]   |"
              },
              "properties": {
                "security-severity": "4.7"
              }
            },
            {
              "id": "CVE-2024-43799_send_0.18.0",
              "shortDescription": {
                "text": "[CVE-2024-43799] send 0.18.0"
              },
              "help": {
                "text": "Send is a library for streaming files from the file system as a http response. Send passes untrusted user input to SendStream.redirect() which executes untrusted code. This issue is patched in send 0.19.0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.7      | Not Covered       | `express 4.19.2`       | [0.19.0]   |"
              },
              "properties": {
                "security-severity": "4.7"
              }
            },
            {
              "id": "CVE-2024-43796_express_4.19.2",
              "shortDescription": {
                "text": "[CVE-2024-43796] express 4.19.2"
              },
              "help": {
                "text": "Express.js minimalist web framework for node. In express \u003c 4.20.0, passing untrusted user input - even after sanitizing it - to response.redirect() may execute untrusted code. This issue is patched in express 4.20.0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.7      | Not Covered       | `express 4.19.2`       | [4.20.0], [5.0.0]   |"
              },
              "properties": {
                "security-severity": "4.7"
              }
            },
            {
              "id": "CVE-2024-30260_undici_5.8.0",
              "shortDescription": {
                "text": "[CVE-2024-30260] undici 5.8.0"
              },
              "help": {
                "text": "Undici is an HTTP/1.1 client, written from scratch for Node.js. Undici cleared Authorization and Proxy-Authorization headers for `fetch()`, but did not clear them for `undici.request()`. This vulnerability was patched in version(s) 5.28.4 and 6.11.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.3      | Not Covered       | `undici 5.8.0`       | [5.28.4], [6.11.1]   |"
              },
              "properties": {
                "security-severity": "4.3"
              }
            },
            {
              "id": "CVE-2024-24758_undici_5.8.0",
              "shortDescription": {
                "text": "[CVE-2024-24758] undici 5.8.0"
              },
              "help": {
                "text": "Undici is an HTTP/1.1 client, written from scratch for Node.js. Undici already cleared Authorization headers on cross-origin redirects, but did not clear `Proxy-Authentication` headers. This issue has been patched in versions 5.28.3 and 6.6.1. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.5      | Not Covered       | `undici 5.8.0`       | [5.28.3], [6.6.1]   |"
              },
              "properties": {
                "security-severity": "4.5"
              }
            },
            {
              "id": "CVE-2023-23936_undici_5.8.0",
              "shortDescription": {
                "text": "[CVE-2023-23936] undici 5.8.0"
              },
              "help": {
                "text": "The fetch API in Node.js did not prevent CRLF injection in the 'host' header potentially allowing attacks such as HTTP response splitting and HTTP header injection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.4      | Not Covered       | `undici 5.8.0`       | [5.19.1]   |"
              },
              "properties": {
                "security-severity": "5.4"
              }
            },
            {
              "id": "CVE-2022-3224_parse-url_6.0.5",
              "shortDescription": {
                "text": "[CVE-2022-3224] parse-url 6.0.5"
              },
              "help": {
                "text": "Misinterpretation of Input in GitHub repository ionicabizau/parse-url prior to 8.1.0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `parse-url 6.0.5`       | [8.1.0]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2022-35948_undici_5.8.0",
              "shortDescription": {
                "text": "[CVE-2022-35948] undici 5.8.0"
              },
              "help": {
                "text": "undici is an HTTP/1.1 client, written from scratch for Node.js.`=\u003c undici@5.8.0` users are vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header. Example: ``` import { request } from 'undici' const unsanitizedContentTypeInput = 'application/json\\r\\n\\r\\nGET /foo2 HTTP/1.1' await request('http://localhost:3000, { method: 'GET', headers: { 'content-type': unsanitizedContentTypeInput }, }) ``` The above snippet will perform two requests in a single `request` API call: 1) `http://localhost:3000/` 2) `http://localhost:3000/foo2` This issue was patched in Undici v5.8.1. Sanitize input when sending content-type headers using user input as a workaround.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `undici 5.8.0`       | [5.8.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-24773_node-forge_0.7.6",
              "shortDescription": {
                "text": "[CVE-2022-24773] node-forge 0.7.6"
              },
              "help": {
                "text": "Forge (also called `node-forge`) is a native implementation of Transport Layer Security in JavaScript. Prior to version 1.3.0, RSA PKCS#1 v1.5 signature verification code does not properly check `DigestInfo` for a proper ASN.1 structure. This can lead to successful verification with signatures that contain invalid structures but a valid digest. The issue has been addressed in `node-forge` version 1.3.0. There are currently no known workarounds.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `node-forge 0.7.6`       | [1.3.0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-0122_node-forge_0.7.6",
              "shortDescription": {
                "text": "[CVE-2022-0122] node-forge 0.7.6"
              },
              "help": {
                "text": "forge is vulnerable to URL Redirection to Untrusted Site",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `node-forge 0.7.6`       | [1.0.0]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2024-47764_cookie_0.6.0",
              "shortDescription": {
                "text": "[CVE-2024-47764] cookie 0.6.0"
              },
              "help": {
                "text": "cookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for path and domain, which could be abused to alter other fields of the cookie. Upgrade to 0.7.0, which updates the validation for name, path, and domain.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `express 4.19.2`       | [0.7.0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-30261_undici_5.8.0",
              "shortDescription": {
                "text": "[CVE-2024-30261] undici 5.8.0"
              },
              "help": {
                "text": "Undici is an HTTP/1.1 client, written from scratch for Node.js. An attacker can alter the `integrity` option passed to `fetch()`, allowing `fetch()` to accept requests as valid even if they have been tampered. This vulnerability was patched in version(s) 5.28.4 and 6.11.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.5      | Not Covered       | `undici 5.8.0`       | [5.28.4], [6.11.1]   |"
              },
              "properties": {
                "security-severity": "3.5"
              }
            },
            {
              "id": "CVE-2023-45143_undici_5.8.0",
              "shortDescription": {
                "text": "[CVE-2023-45143] undici 5.8.0"
              },
              "help": {
                "text": "Cookie headers are not cleared in cross-domain redirect in undici-fetch (High)",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.5      | Not Covered       | `undici 5.8.0`       | [5.26.2]   |"
              },
              "properties": {
                "security-severity": "3.5"
              }
            },
            {
              "id": "CVE-2023-37903_vm2_3.9.19",
              "shortDescription": {
                "text": "[CVE-2023-37903] vm2 3.9.19"
              },
              "help": {
                "text": "vm2 is an open source vm/sandbox for Node.js. In vm2 for versions up to and including 3.9.19, Node.js custom inspect function allows attackers to escape the sandbox and run arbitrary code. This may result in Remote Code Execution, assuming the attacker has arbitrary code execution primitive inside the context of vm2 sandbox. There are no patches and no known workarounds. Users are advised to find an alternative software.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 10.0      | Not Applicable       | `vm2 3.9.19`       | No fix available   |"
              },
              "properties": {
                "security-severity": "10.0"
              }
            },
            {
              "id": "CVE-2023-37466_vm2_3.9.19",
              "shortDescription": {
                "text": "[CVE-2023-37466] vm2 3.9.19"
              },
              "help": {
                "text": "vm2 is an advanced vm/sandbox for Node.js. The library contains critical security issues and should not be used for production. The maintenance of the project has been discontinued. In vm2 for versions up to 3.9.19, `Promise` handler sanitization can be bypassed with the `@@species` accessor property allowing attackers to escape the sandbox and run arbitrary code, potentially allowing remote code execution inside the context of vm2 sandbox.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 10.0      | Not Applicable       | `vm2 3.9.19`       | No fix available   |"
              },
              "properties": {
                "security-severity": "10.0"
              }
            },
            {
              "id": "CVE-2022-2900_parse-url_6.0.5",
              "shortDescription": {
                "text": "[CVE-2022-2900] parse-url 6.0.5"
              },
              "help": {
                "text": "Server-Side Request Forgery (SSRF) in GitHub repository ionicabizau/parse-url prior to 8.1.0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Applicable       | `parse-url 6.0.5`       | [8.1.0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2021-44906_minimist_1.2.0",
              "shortDescription": {
                "text": "[CVE-2021-44906] minimist 1.2.0"
              },
              "help": {
                "text": "Minimist \u003c=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `minimist 1.2.0`       | [0.2.4], [1.2.6]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2024-45590_body-parser_1.20.2",
              "shortDescription": {
                "text": "[CVE-2024-45590] body-parser 1.20.2"
              },
              "help": {
                "text": "body-parser is Node.js body parsing middleware. body-parser \u003c1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service. This issue is patched in 1.20.3.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `express 4.19.2`       | [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24771_node-forge_0.7.6",
              "shortDescription": {
                "text": "[CVE-2022-24771] node-forge 0.7.6"
              },
              "help": {
                "text": "Forge (also called `node-forge`) is a native implementation of Transport Layer Security in JavaScript. Prior to version 1.3.0, RSA PKCS#1 v1.5 signature verification code is lenient in checking the digest algorithm structure. This can allow a crafted structure that steals padding bytes and uses unchecked portion of the PKCS#1 encoded message to forge a signature when a low public exponent is being used. The issue has been addressed in `node-forge` version 1.3.0. There are currently no known workarounds.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `node-forge 0.7.6`       | [1.3.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24772_node-forge_0.7.6",
              "shortDescription": {
                "text": "[CVE-2022-24772] node-forge 0.7.6"
              },
              "help": {
                "text": "Forge (also called `node-forge`) is a native implementation of Transport Layer Security in JavaScript. Prior to version 1.3.0, RSA PKCS#1 v1.5 signature verification code does not check for tailing garbage bytes after decoding a `DigestInfo` ASN.1 structure. This can allow padding bytes to be removed and garbage data added to forge a signature when a low public exponent is being used. The issue has been addressed in `node-forge` version 1.3.0. There are currently no known workarounds.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `node-forge 0.7.6`       | [1.3.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-7720_node-forge_0.7.6",
              "shortDescription": {
                "text": "[CVE-2020-7720] node-forge 0.7.6"
              },
              "help": {
                "text": "The package node-forge before 0.10.0 is vulnerable to Prototype Pollution via the util.setPath function. Note: Version 0.10.0 is a breaking change removing the vulnerable functions.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Not Applicable       | `node-forge 0.7.6`       | [0.10.0]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2020-11022_jquery_3.4.1",
              "shortDescription": {
                "text": "[CVE-2020-11022] jquery 3.4.1"
              },
              "help": {
                "text": "In jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Applicable       | `jquery 3.4.1`       | [3.5.0]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2020-11023_jquery_3.4.1",
              "shortDescription": {
                "text": "[CVE-2020-11023] jquery 3.4.1"
              },
              "help": {
                "text": "In jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing \u003coption\u003e elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Applicable       | `jquery 3.4.1`       | [3.5.0]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2020-7598_minimist_1.2.0",
              "shortDescription": {
                "text": "[CVE-2020-7598] minimist 1.2.0"
              },
              "help": {
                "text": "minimist before 1.2.2 could be tricked into adding or modifying properties of Object.prototype using a \"constructor\" or \"__proto__\" payload.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Applicable       | `minimist 1.2.0`       | [0.2.1], [1.2.3]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2023-24807_undici_5.8.0",
              "shortDescription": {
                "text": "[CVE-2023-24807] undici 5.8.0"
              },
              "help": {
                "text": "The Headers.set() and Headers.append() methods in the fetch API in Node.js where vulnerable to Regular a Expression Denial of Service (ReDoS) attacks.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `undici 5.8.0`       | [5.19.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            }
          ],
          "version": "3.108.10"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2022-35949_undici_5.8.0",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "[CVE-2022-35949] undici 5.8.0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0624_parse-path_4.0.4",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "[CVE-2022-0624] parse-url 6.0.5"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-45296_path-to-regexp_0.1.7",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "[CVE-2024-45296] express 4.19.2"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-52798_path-to-regexp_0.1.7",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-52798] express 4.19.2"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-43800_serve-static_1.15.0",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-43800] express 4.19.2"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-43799_send_0.18.0",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-43799] express 4.19.2"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-43796_express_4.19.2",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-43796] express 4.19.2"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-30260_undici_5.8.0",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-30260] undici 5.8.0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24758_undici_5.8.0",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-24758] undici 5.8.0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23936_undici_5.8.0",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-23936] undici 5.8.0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3224_parse-url_6.0.5",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-3224] parse-url 6.0.5"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-35948_undici_5.8.0",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-35948] undici 5.8.0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24773_node-forge_0.7.6",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-24773] node-forge 0.7.6"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0122_node-forge_0.7.6",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-0122] node-forge 0.7.6"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-47764_cookie_0.6.0",
          "ruleIndex": 14,
          "level": "note",
          "message": {
            "text": "[CVE-2024-47764] express 4.19.2"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-30261_undici_5.8.0",
          "ruleIndex": 15,
          "level": "note",
          "message": {
            "text": "[CVE-2024-30261] undici 5.8.0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45143_undici_5.8.0",
          "ruleIndex": 16,
          "level": "note",
          "message": {
            "text": "[CVE-2023-45143] undici 5.8.0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-37903_vm2_3.9.19",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "[CVE-2023-37903] vm2 3.9.19"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-37466_vm2_3.9.19",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "text": "[CVE-2023-37466] vm2 3.9.19"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2900_parse-url_6.0.5",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2900] parse-url 6.0.5"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44906_minimist_1.2.0",
          "ruleIndex": 20,
          "level": "error",
          "message": {
            "text": "[CVE-2021-44906] minimist 1.2.0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-45590_body-parser_1.20.2",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "[CVE-2024-45590] express 4.19.2"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24771_node-forge_0.7.6",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24771] node-forge 0.7.6"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24772_node-forge_0.7.6",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24772] node-forge 0.7.6"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7720_node-forge_0.7.6",
          "ruleIndex": 24,
          "level": "error",
          "message": {
            "text": "[CVE-2020-7720] node-forge 0.7.6"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11022_jquery_3.4.1",
          "ruleIndex": 25,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-11022] jquery 3.4.1"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11023_jquery_3.4.1",
          "ruleIndex": 26,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-11023] jquery 3.4.1"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7598_minimist_1.2.0",
          "ruleIndex": 27,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-7598] minimist 1.2.0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24807_undici_5.8.0",
          "ruleIndex": 28,
          "level": "note",
          "message": {
            "text": "[CVE-2023-24807] undici 5.8.0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://package.json"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Applicability Scanner",
          "rules": [
            {
              "id": "applic_CVE-2020-11023",
              "name": "CVE-2020-11023",
              "shortDescription": {
                "text": "Scanner for CVE-2020-11023"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `jquery.html` with external input to its 1st (`html `) argument.\n* `jquery.append` with external input to its 1st (`html `) argument.\n* `jquery.htmlPrefilter` with external input to its 1st (`html `) argument.\n* `jquery` with external input to its 1st (`html `) argument.",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `jquery.html` with external input to its 1st (`html `) argument.\n* `jquery.append` with external input to its 1st (`html `) argument.\n* `jquery.htmlPrefilter` with external input to its 1st (`html `) argument.\n* `jquery` with external input to its 1st (`html `) argument."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": 6.9
              }
            },
            {
              "id": "applic_CVE-2020-11022",
              "name": "CVE-2020-11022",
              "shortDescription": {
                "text": "Scanner for CVE-2020-11022"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `jquery.html` with external input to its 1st (`html `) argument.\n* `jquery.append` with external input to its 1st (`html `) argument.\n* `jquery.htmlPrefilter` with external input to its 1st (`html `) argument.\n* `jquery` with external input to its 1st (`html `) argument.",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `jquery.html` with external input to its 1st (`html `) argument.\n* `jquery.append` with external input to its 1st (`html `) argument.\n* `jquery.htmlPrefilter` with external input to its 1st (`html `) argument.\n* `jquery` with external input to its 1st (`html `) argument."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": 6.9
              }
            },
            {
              "id": "applic_CVE-2020-7598",
              "name": "CVE-2020-7598",
              "shortDescription": {
                "text": "Scanner for CVE-2020-7598"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `minimist` is called with external input to its 1st (`args`) argument, and the `Object.freeze()` remediation is not present.",
                "markdown": "The scanner checks whether the vulnerable function `minimist` is called with external input to its 1st (`args`) argument, and the `Object.freeze()` remediation is not present."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": 6.9
              }
            },
            {
              "id": "applic_CVE-2021-44906",
              "name": "CVE-2021-44906",
              "shortDescription": {
                "text": "Scanner for CVE-2021-44906"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `minimist` is called with external input to its 1st (`args`) argument, and the `Object.freeze()` remediation is not present.",
                "markdown": "The scanner checks whether the vulnerable function `minimist` is called with external input to its 1st (`args`) argument, and the `Object.freeze()` remediation is not present."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": 6.9
              }
            },
            {
              "id": "applic_CVE-2020-7720",
              "name": "CVE-2020-7720",
              "shortDescription": {
                "text": "Scanner for CVE-2020-7720"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `setPath` is called with external input to its 2nd (`keys`) or 3rd (`value`) arguments, and the `Object.freeze()` remediation is not present.",
                "markdown": "The scanner checks whether the vulnerable function `setPath` is called with external input to its 2nd (`keys`) or 3rd (`value`) arguments, and the `Object.freeze()` remediation is not present."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": 6.9
              }
            },
            {
              "id": "applic_CVE-2022-2900",
              "name": "CVE-2022-2900",
              "shortDescription": {
                "text": "Scanner for CVE-2022-2900"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `parseUrl` is called with external input to its 1st (`url`) argument.",
                "markdown": "The scanner checks whether the vulnerable function `parseUrl` is called with external input to its 1st (`url`) argument."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": 6.9
              }
            },
            {
              "id": "applic_CVE-2022-24772",
              "name": "CVE-2022-24772",
              "shortDescription": {
                "text": "Scanner for CVE-2022-24772"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `publicKey.verify` is called.",
                "markdown": "The scanner checks whether the vulnerable function `publicKey.verify` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": 6.9
              }
            },
            {
              "id": "applic_CVE-2022-24771",
              "name": "CVE-2022-24771",
              "shortDescription": {
                "text": "Scanner for CVE-2022-24771"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `publicKey.verify` is called.",
                "markdown": "The scanner checks whether the vulnerable function `publicKey.verify` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": 6.9
              }
            },
            {
              "id": "applic_CVE-2022-35949",
              "name": "CVE-2022-35949",
              "shortDescription": {
                "text": "Scanner for CVE-2022-35949"
              },
              "fullDescription": {
                "text": "The scanner checks whether the function `undici.request` is called with a `pathname` parameter that originates from an external input.",
                "markdown": "The scanner checks whether the function `undici.request` is called with a `pathname` parameter that originates from an external input."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": 6.9
              }
            },
            {
              "id": "applic_CVE-2023-37903",
              "name": "CVE-2023-37903",
              "shortDescription": {
                "text": "Scanner for CVE-2023-37903"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `vm2.run()` is called with external input.",
                "markdown": "The scanner checks whether the vulnerable function `vm2.run()` is called with external input."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": 6.9
              }
            },
            {
              "id": "applic_CVE-2023-37466",
              "name": "CVE-2023-37466",
              "shortDescription": {
                "text": "Scanner for CVE-2023-37466"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `vm2.run()` is called with external input.",
                "markdown": "The scanner checks whether the vulnerable function `vm2.run()` is called with external input."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": 6.9
              }
            },
            {
              "id": "applic_CVE-2023-24807",
              "name": "CVE-2023-24807",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24807"
              },
              "fullDescription": {
                "text": "The scanner checks if any of the following functions are called with external input:\n\n- `undici.Headers.append()`\n\n- `undici.Headers.set()`",
                "markdown": "The scanner checks if any of the following functions are called with external input:\n\n- `undici.Headers.append()`\n\n- `undici.Headers.set()`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": 6.9
              }
            },
            {
              "id": "applic_CVE-2022-0122",
              "name": "CVE-2022-0122",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-0122"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-24758",
              "name": "CVE-2024-24758",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-24758"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-3224",
              "name": "CVE-2022-3224",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-3224"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-30260",
              "name": "CVE-2024-30260",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-30260"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-43799",
              "name": "CVE-2024-43799",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-43799"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered",
                "security-severity": 6.9
              }
            },
            {
              "id": "applic_CVE-2024-45296",
              "name": "CVE-2024-45296",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-45296"
              },
              "fullDescription": {
                "text": "The scanner checks if any of the following two conditions are present in the code:\n\n- A vulnerable path is present in the code (e.g. `\"/flights/:from-:to\"`).\n- The `path-to-regexp` functions `match()` or `pathToRegexp()` are called with user input.\n\nAn additional condition, which the scanner does not currently check, is that a user-supplied string is matched against the vulnerable regex pattern.",
                "markdown": "The scanner checks if any of the following two conditions are present in the code:\n\n- A vulnerable path is present in the code (e.g. `\"/flights/:from-:to\"`).\n- The `path-to-regexp` functions `match()` or `pathToRegexp()` are called with user input.\n\nAn additional condition, which the scanner does not currently check, is that a user-supplied string is matched against the vulnerable regex pattern."
              },
              "properties": {
                "applicability": "not_covered",
                "security-severity": 6.9
              }
            },
            {
              "id": "applic_CVE-2022-35948",
              "name": "CVE-2022-35948",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-35948"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-23936",
              "name": "CVE-2023-23936",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-23936"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-30261",
              "name": "CVE-2024-30261",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-30261"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-43800",
              "name": "CVE-2024-43800",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-43800"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered",
                "security-severity": 6.9
              }
            },
            {
              "id": "applic_CVE-2022-0624",
              "name": "CVE-2022-0624",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-0624"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered",
                "security-severity": 6.9
              }
            },
            {
              "id": "applic_CVE-2024-47764",
              "name": "CVE-2024-47764",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-47764"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered",
                "security-severity": 6.9
              }
            },
            {
              "id": "applic_CVE-2024-52798",
              "name": "CVE-2024-52798",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-52798"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered",
                "security-severity": 6.9
              }
            },
            {
              "id": "applic_CVE-2022-24773",
              "name": "CVE-2022-24773",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-24773"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-45143",
              "name": "CVE-2023-45143",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-45143"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-43796",
              "name": "CVE-2024-43796",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-43796"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-43799",
              "name": "CVE-2024-43799",
              "shortDescription": {
                "text": "Scanner for indirect dependency CVE-2024-43799"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable"
              }
            },
            {
              "id": "applic_CVE-2022-0624",
              "name": "CVE-2022-0624",
              "shortDescription": {
                "text": "Scanner for indirect dependency CVE-2022-0624"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable"
              }
            },
            {
              "id": "applic_CVE-2024-45590",
              "name": "CVE-2024-45590",
              "shortDescription": {
                "text": "Scanner for indirect dependency CVE-2024-45590"
              },
              "fullDescription": {
                "text": "The scanner checks whether body-parser's URL-encoded parser is initialized with `extended = true`.",
                "markdown": "The scanner checks whether body-parser's URL-encoded parser is initialized with `extended = true`."
              },
              "properties": {
                "applicability": "not_applicable",
                "security-severity": 6.9
              }
            },
            {
              "id": "applic_CVE-2024-45296",
              "name": "CVE-2024-45296",
              "shortDescription": {
                "text": "Scanner for indirect dependency CVE-2024-45296"
              },
              "fullDescription": {
                "text": "The scanner checks if any of the following two conditions are present in the code:\n\n- A vulnerable path is present in the code (e.g. `\"/flights/:from-:to\"`).\n- The `path-to-regexp` functions `match()` or `pathToRegexp()` are called with user input.\n\nAn additional condition, which the scanner does not currently check, is that a user-supplied string is matched against the vulnerable regex pattern.",
                "markdown": "The scanner checks if any of the following two conditions are present in the code:\n\n- A vulnerable path is present in the code (e.g. `\"/flights/:from-:to\"`).\n- The `path-to-regexp` functions `match()` or `pathToRegexp()` are called with user input.\n\nAn additional condition, which the scanner does not currently check, is that a user-supplied string is matched against the vulnerable regex pattern."
              },
              "properties": {
                "applicability": "not_applicable"
              }
            },
            {
              "id": "applic_CVE-2024-52798",
              "name": "CVE-2024-52798",
              "shortDescription": {
                "text": "Scanner for indirect dependency CVE-2024-52798"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable"
              }
            },
            {
              "id": "applic_CVE-2024-43800",
              "name": "CVE-2024-43800",
              "shortDescription": {
                "text": "Scanner for indirect dependency CVE-2024-43800"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable"
              }
            },
            {
              "id": "applic_CVE-2024-47764",
              "name": "CVE-2024-47764",
              "shortDescription": {
                "text": "Scanner for indirect dependency CVE-2024-47764"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "C:\\Users\\Asaf Cohen\\.jfrog\\dependencies\\analyzerManager\\jas_scanner\\jas_scanner.exe",
            "scan",
            "C:\\Users\\ASAFCO~1\\AppData\\Local\\Temp\\jfrog.cli.temp.-1734634981-1295738223\\Applicability_1734634991\\config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "server_gallery"
          }
        }
      ],
      "results": [
        {
          "ruleId": "applic_CVE-2020-11023",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `jquery.html` with external input to its 1st (`html `) argument.\n* `jquery.append` with external input to its 1st (`html `) argument.\n* `jquery.htmlPrefilter` with external input to its 1st (`html `) argument.\n* `jquery` with external input to its 1st (`html `) argument."
          }
        },
        {
          "ruleId": "applic_CVE-2020-11022",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `jquery.html` with external input to its 1st (`html `) argument.\n* `jquery.append` with external input to its 1st (`html `) argument.\n* `jquery.htmlPrefilter` with external input to its 1st (`html `) argument.\n* `jquery` with external input to its 1st (`html `) argument."
          }
        },
        {
          "ruleId": "applic_CVE-2020-7598",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `minimist` is called with external input to its 1st (`args`) argument, and the `Object.freeze()` remediation is not present."
          }
        },
        {
          "ruleId": "applic_CVE-2021-44906",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `minimist` is called with external input to its 1st (`args`) argument, and the `Object.freeze()` remediation is not present."
          }
        },
        {
          "ruleId": "applic_CVE-2020-7720",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `setPath` is called with external input to its 2nd (`keys`) or 3rd (`value`) arguments, and the `Object.freeze()` remediation is not present."
          }
        },
        {
          "ruleId": "applic_CVE-2022-2900",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `parseUrl` is called with external input to its 1st (`url`) argument."
          }
        },
        {
          "ruleId": "applic_CVE-2022-24772",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `publicKey.verify` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-24771",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `publicKey.verify` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-35949",
          "message": {
            "text": "The vulnerable object undici.request is instantiated with user controlled input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/demo/server_gallery/app.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 21,
                  "endLine": 66,
                  "endColumn": 51,
                  "snippet": {
                    "text": "{origin: url , pathname: path}"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-35949",
          "message": {
            "text": "The vulnerable object undici.request is instantiated with user controlled input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/demo/server_gallery/app.js"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 21,
                  "endLine": 89,
                  "endColumn": 51,
                  "snippet": {
                    "text": "{origin: url , pathname: path}"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-37903",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `vm2.run()` is called with external input."
          }
        },
        {
          "ruleId": "applic_CVE-2023-37466",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `vm2.run()` is called with external input."
          }
        },
        {
          "ruleId": "applic_CVE-2023-24807",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if any of the following functions are called with external input:\n\n- `undici.Headers.append()`\n\n- `undici.Headers.set()`"
          }
        },
        {
          "ruleId": "applic_CVE-2024-43799",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-0624",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2024-45590",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether body-parser's URL-encoded parser is initialized with `extended = true`."
          }
        },
        {
          "ruleId": "applic_CVE-2024-45296",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if any of the following two conditions are present in the code:\n\n- A vulnerable path is present in the code (e.g. `\"/flights/:from-:to\"`).\n- The `path-to-regexp` functions `match()` or `pathToRegexp()` are called with user input.\n\nAn additional condition, which the scanner does not currently check, is that a user-supplied string is matched against the vulnerable regex pattern."
          }
        },
        {
          "ruleId": "applic_CVE-2024-52798",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2024-43800",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2024-47764",
          "kind": "pass",
          "message": {
            "text": ""
          }
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/infrastructure-as-code-iac",
          "name": "JFrog Terraform scanner",
          "rules": [],
          "version": "1.8.9"
        }
      },
      "invocations": [
        {
          "arguments": [
            "C:\\Users\\Asaf Cohen\\.jfrog\\dependencies\\analyzerManager\\iac_scanner\\tf_scanner.exe",
            "scan",
            "C:\\Users\\ASAFCO~1\\AppData\\Local\\Temp\\jfrog.cli.temp.-1734634981-1295738223\\IaC_1734634981\\config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "server_gallery"
          }
        }
      ],
      "results": []
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Secrets scanner",
          "rules": [
            {
              "id": "REQ.SECRET.GENERIC.TEXT",
              "name": "REQ.SECRET.GENERIC.TEXT",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.TEXT"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.CODE",
              "name": "REQ.SECRET.GENERIC.CODE",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.CODE"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": 6.9
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.URL",
              "name": "REQ.SECRET.GENERIC.URL",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.URL"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.KEYS",
              "name": "REQ.SECRET.KEYS",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.KEYS"
              },
              "fullDescription": {
                "text": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n",
                "markdown": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n"
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            },
            {
              "id": "REQ.CRED.PUBLIC-ONLY",
              "name": "REQ.CRED.PUBLIC-ONLY",
              "shortDescription": {
                "text": "Scanner for REQ.CRED.PUBLIC-ONLY"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "C:\\Users\\Asaf Cohen\\.jfrog\\dependencies\\analyzerManager\\jas_scanner\\jas_scanner.exe",
            "scan",
            "C:\\Users\\ASAFCO~1\\AppData\\Local\\Temp\\jfrog.cli.temp.-1734634981-1295738223\\Secrets_1734634981\\config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "server_gallery"
          }
        }
      ],
      "results": [
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/demo/server_gallery/app.js"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 7,
                  "endLine": 11,
                  "endColumn": 80,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/demo/server_gallery/app.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 7,
                  "endLine": 8,
                  "endColumn": 119,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sast",
          "name": "USAF",
          "rules": [
            {
              "id": "js-express-without-helmet",
              "shortDescription": {
                "text": "Express Not Using Helmet"
              },
              "fullDescription": {
                "text": "\n### Overview\nHelmet library should be used when using Express in order to properly configure\nHTTP header settings to mitigate a range of well-known vulnerabilities.\n\n### Remediation\n```javascript\nconst helmet = require(\"helmet\");\nconst app = express()\n\napp.use(helmet())\n```\n\n### References\n[Best practices for Express](https://expressjs.com/en/advanced/best-practice-security.html)\n",
                "markdown": "\n### Overview\nHelmet library should be used when using Express in order to properly configure\nHTTP header settings to mitigate a range of well-known vulnerabilities.\n\n### Remediation\n```javascript\nconst helmet = require(\"helmet\");\nconst app = express()\n\napp.use(helmet())\n```\n\n### References\n[Best practices for Express](https://expressjs.com/en/advanced/best-practice-security.html)\n"
              },
              "defaultConfiguration": {
                "parameters": {
                  "properties": {
                    "CWE": "693"
                  }
                }
              },
              "properties": {
                "security-severity": 3.9
              }
            },
            {
              "id": "js-insecure-random",
              "shortDescription": {
                "text": "Use of Insecure Random"
              },
              "fullDescription": {
                "text": "\n### Overview\nA use of insecure random vulnerability is a type of security flaw that is\ncaused by the use of inadequate or predictable random numbers in a program\nor system. Random numbers are used in many security-related applications,\nsuch as generating cryptographic keys and if the numbers are not truly\nrandom, an attacker may be able to predict or recreate them, potentially\ncompromising the security of the system.\n\n### Vulnerable example\n```javascript\nvar randomNum = Math.random();\n```\n`Math.random` is not secured, as it creates predictable random numbers.\n\n### Remediation\n```diff\nvar randomNum = crypto.randomInt(0, 100)\n```\n`crypto.randomInt` is secured, and creates much less predictable random\nnumbers.\n",
                "markdown": "\n### Overview\nA use of insecure random vulnerability is a type of security flaw that is\ncaused by the use of inadequate or predictable random numbers in a program\nor system. Random numbers are used in many security-related applications,\nsuch as generating cryptographic keys and if the numbers are not truly\nrandom, an attacker may be able to predict or recreate them, potentially\ncompromising the security of the system.\n\n### Vulnerable example\n```javascript\nvar randomNum = Math.random();\n```\n`Math.random` is not secured, as it creates predictable random numbers.\n\n### Remediation\n```diff\nvar randomNum = crypto.randomInt(0, 100)\n```\n`crypto.randomInt` is secured, and creates much less predictable random\nnumbers.\n"
              },
              "defaultConfiguration": {
                "parameters": {
                  "properties": {
                    "CWE": "338"
                  }
                }
              },
              "properties": {
                "security-severity": 3.9
              }
            },
            {
              "id": "js-xss",
              "shortDescription": {
                "text": "Cross Site Scripting (XSS)"
              },
              "fullDescription": {
                "text": "\n### Overview\nXSS, or Cross-Site Scripting, is a type of vulnerability that allows an\nattacker to inject malicious code into a website or web application.\nThis may allow the attacker to access sensitive information from users, such\nas their cookies or login credentials, or to perform unauthorized actions\non their behalf.\n\n### Vulnerable example\n```javascript\nconst express = require('express');\nconst app = express();\n\napp.get('/handle', (req, res) =\u003e {\n    username = req.params[\"username\"];\n    res.send('\u003cb\u003e' + username + '\u003c/b\u003e');\n});\n```\nIn this example, a user-provided data is injected directly into the\n`res.send` command.\n\n### Remediation\n```diff\nconst express = require('express');\n+ var escapeHtml = require('escape-html')\nconst app = express();\n\napp.get('/handle', (req, res) =\u003e {\n    username = req.params[\"username\"];\n-   res.send('\u003cb\u003e' + username + '\u003c/b\u003e');\n+   res.send('\u003cb\u003e' + escapeHtml(username) + '\u003c/b\u003e');\n});\n```\nUsing `escape-html` library, we escape the user-provided data, before\ngetting into the `res.send` command.\n",
                "markdown": "\n### Overview\nXSS, or Cross-Site Scripting, is a type of vulnerability that allows an\nattacker to inject malicious code into a website or web application.\nThis may allow the attacker to access sensitive information from users, such\nas their cookies or login credentials, or to perform unauthorized actions\non their behalf.\n\n### Vulnerable example\n```javascript\nconst express = require('express');\nconst app = express();\n\napp.get('/handle', (req, res) =\u003e {\n    username = req.params[\"username\"];\n    res.send('\u003cb\u003e' + username + '\u003c/b\u003e');\n});\n```\nIn this example, a user-provided data is injected directly into the\n`res.send` command.\n\n### Remediation\n```diff\nconst express = require('express');\n+ var escapeHtml = require('escape-html')\nconst app = express();\n\napp.get('/handle', (req, res) =\u003e {\n    username = req.params[\"username\"];\n-   res.send('\u003cb\u003e' + username + '\u003c/b\u003e');\n+   res.send('\u003cb\u003e' + escapeHtml(username) + '\u003c/b\u003e');\n});\n```\nUsing `escape-html` library, we escape the user-provided data, before\ngetting into the `res.send` command.\n"
              },
              "defaultConfiguration": {
                "parameters": {
                  "properties": {
                    "CWE": "79"
                  }
                }
              },
              "properties": {
                "security-severity": 8.9
              }
            }
          ],
          "version": "1.8.9"
        }
      },
      "invocations": [
        {
          "arguments": [
            "C:\\Users\\Asaf Cohen\\.jfrog\\dependencies\\analyzerManager\\zd_scanner\\scanner.exe",
            "scan",
            "C:\\Users\\ASAFCO~1\\AppData\\Local\\Temp\\jfrog.cli.temp.-1734634981-1295738223\\Sast_1734634987\\results.sarif",
            "C:\\Users\\ASAFCO~1\\AppData\\Local\\Temp\\jfrog.cli.temp.-1734634981-1295738223\\Sast_1734634987\\config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "server_gallery"
          }
        }
      ],
      "results": [
        {
          "ruleId": "js-xss",
          "level": "error",
          "message": {
            "text": "Cross Site Scripting (XSS)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/demo/server_gallery/app.js"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 21,
                  "endLine": 51,
                  "endColumn": 54,
                  "snippet": {
                    "text": "{ status: \"success\", path: path }"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "app.^_2.^_3"
                }
              ]
            }
          ],
          "fingerprints": {
            "precise_sink_and_sink_function": "fbe6b6aac337dc3f10458cf01e28c79b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 39,
                            "startColumn": 26,
                            "endLine": 39,
                            "endColumn": 29,
                            "snippet": {
                              "text": "req"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_2"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 44,
                            "startColumn": 16,
                            "endLine": 44,
                            "endColumn": 19,
                            "snippet": {
                              "text": "req"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_2"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 44,
                            "startColumn": 16,
                            "endLine": 44,
                            "endColumn": 25,
                            "snippet": {
                              "text": "req.files"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_2"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 44,
                            "startColumn": 16,
                            "endLine": 44,
                            "endColumn": 32,
                            "snippet": {
                              "text": "req.files.myFile"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_2"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 44,
                            "startColumn": 9,
                            "endLine": 44,
                            "endColumn": 13,
                            "snippet": {
                              "text": "file"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_2"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 45,
                            "startColumn": 42,
                            "endLine": 45,
                            "endColumn": 46,
                            "snippet": {
                              "text": "file"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_2"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 45,
                            "startColumn": 42,
                            "endLine": 45,
                            "endColumn": 51,
                            "snippet": {
                              "text": "file.name"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_2"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 45,
                            "startColumn": 16,
                            "endLine": 45,
                            "endColumn": 51,
                            "snippet": {
                              "text": "__dirname + \"/uploads/\" + file.name"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_2"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 45,
                            "startColumn": 9,
                            "endLine": 45,
                            "endColumn": 13,
                            "snippet": {
                              "text": "path"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_2"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 51,
                            "startColumn": 48,
                            "endLine": 51,
                            "endColumn": 52,
                            "snippet": {
                              "text": "path"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_2.^_3"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 51,
                            "startColumn": 21,
                            "endLine": 51,
                            "endColumn": 54,
                            "snippet": {
                              "text": "{ status: \"success\", path: path }"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_2.^_3"
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "js-xss",
          "level": "error",
          "message": {
            "text": "Cross Site Scripting (XSS)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/demo/server_gallery/app.js"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 19,
                  "endLine": 74,
                  "endColumn": 52,
                  "snippet": {
                    "text": "{ status: \"success\", path: path }"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "app.^_5"
                }
              ]
            }
          ],
          "fingerprints": {
            "precise_sink_and_sink_function": "05e6ecb5bdaa81f9bf7f0b69e33fd0f2"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 55,
                            "startColumn": 26,
                            "endLine": 55,
                            "endColumn": 29,
                            "snippet": {
                              "text": "req"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_5"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 56,
                            "startColumn": 18,
                            "endLine": 56,
                            "endColumn": 21,
                            "snippet": {
                              "text": "req"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_5"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 56,
                            "startColumn": 18,
                            "endLine": 56,
                            "endColumn": 26,
                            "snippet": {
                              "text": "req.body"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_5"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 56,
                            "startColumn": 18,
                            "endLine": 56,
                            "endColumn": 32,
                            "snippet": {
                              "text": "req.body.myURL"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_5"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 56,
                            "startColumn": 9,
                            "endLine": 56,
                            "endColumn": 15,
                            "snippet": {
                              "text": "usrUrl"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_5"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 57,
                            "startColumn": 28,
                            "endLine": 57,
                            "endColumn": 34,
                            "snippet": {
                              "text": "usrUrl"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_5"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 13,
                            "startColumn": 19,
                            "endLine": 13,
                            "endColumn": 25,
                            "snippet": {
                              "text": "usrUrl"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.parseUrl"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 16,
                            "startColumn": 40,
                            "endLine": 16,
                            "endColumn": 46,
                            "snippet": {
                              "text": "usrUrl"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.parseUrl"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 16,
                            "startColumn": 40,
                            "endLine": 16,
                            "endColumn": 71,
                            "snippet": {
                              "text": "usrUrl.slice(0, slashNextIndex)"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.parseUrl"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 16,
                            "startColumn": 3,
                            "endLine": 16,
                            "endColumn": 71,
                            "snippet": {
                              "text": "return usrUrl.slice(slashNextIndex), usrUrl.slice(0, slashNextIndex)"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.parseUrl"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 57,
                            "startColumn": 19,
                            "endLine": 57,
                            "endColumn": 35,
                            "snippet": {
                              "text": "parseUrl(usrUrl)"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_5"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 57,
                            "startColumn": 12,
                            "endLine": 57,
                            "endColumn": 16,
                            "snippet": {
                              "text": "path"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_5"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 74,
                            "startColumn": 46,
                            "endLine": 74,
                            "endColumn": 50,
                            "snippet": {
                              "text": "path"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_5"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 74,
                            "startColumn": 19,
                            "endLine": 74,
                            "endColumn": 52,
                            "snippet": {
                              "text": "{ status: \"success\", path: path }"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_5"
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "js-xss",
          "level": "error",
          "message": {
            "text": "Cross Site Scripting (XSS)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/demo/server_gallery/app.js"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 19,
                  "endLine": 97,
                  "endColumn": 52,
                  "snippet": {
                    "text": "{ status: \"success\", path: path }"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "app.^_9"
                }
              ]
            }
          ],
          "fingerprints": {
            "precise_sink_and_sink_function": "1d6079729a69ac42ca5bc883ec50cb28"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 78,
                            "startColumn": 26,
                            "endLine": 78,
                            "endColumn": 29,
                            "snippet": {
                              "text": "req"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_9"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 79,
                            "startColumn": 18,
                            "endLine": 79,
                            "endColumn": 21,
                            "snippet": {
                              "text": "req"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_9"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 79,
                            "startColumn": 18,
                            "endLine": 79,
                            "endColumn": 26,
                            "snippet": {
                              "text": "req.body"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_9"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 79,
                            "startColumn": 18,
                            "endLine": 79,
                            "endColumn": 32,
                            "snippet": {
                              "text": "req.body.myURL"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_9"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 79,
                            "startColumn": 9,
                            "endLine": 79,
                            "endColumn": 15,
                            "snippet": {
                              "text": "usrUrl"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_9"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 80,
                            "startColumn": 28,
                            "endLine": 80,
                            "endColumn": 34,
                            "snippet": {
                              "text": "usrUrl"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_9"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 13,
                            "startColumn": 19,
                            "endLine": 13,
                            "endColumn": 25,
                            "snippet": {
                              "text": "usrUrl"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.parseUrl"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 16,
                            "startColumn": 40,
                            "endLine": 16,
                            "endColumn": 46,
                            "snippet": {
                              "text": "usrUrl"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.parseUrl"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 16,
                            "startColumn": 40,
                            "endLine": 16,
                            "endColumn": 71,
                            "snippet": {
                              "text": "usrUrl.slice(0, slashNextIndex)"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.parseUrl"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 16,
                            "startColumn": 3,
                            "endLine": 16,
                            "endColumn": 71,
                            "snippet": {
                              "text": "return usrUrl.slice(slashNextIndex), usrUrl.slice(0, slashNextIndex)"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.parseUrl"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 80,
                            "startColumn": 19,
                            "endLine": 80,
                            "endColumn": 35,
                            "snippet": {
                              "text": "parseUrl(usrUrl)"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_9"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 80,
                            "startColumn": 12,
                            "endLine": 80,
                            "endColumn": 16,
                            "snippet": {
                              "text": "path"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_9"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 97,
                            "startColumn": 46,
                            "endLine": 97,
                            "endColumn": 50,
                            "snippet": {
                              "text": "path"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_9"
                          }
                        ]
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/demo/server_gallery/app.js"
                          },
                          "region": {
                            "startLine": 97,
                            "startColumn": 19,
                            "endLine": 97,
                            "endColumn": 52,
                            "snippet": {
                              "text": "{ status: \"success\", path: path }"
                            }
                          }
                        },
                        "logicalLocations": [
                          {
                            "fullyQualifiedName": "app.^_9"
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "js-insecure-random",
          "level": "note",
          "message": {
            "text": "Use of Insecure Random"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/demo/server_gallery/app.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 44,
                  "endLine": 25,
                  "endColumn": 57,
                  "snippet": {
                    "text": "Math.random()"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "app.makeid"
                }
              ]
            }
          ],
          "fingerprints": {
            "precise_sink_and_sink_function": "45fe1812e5ae4da71d13a5072cf06e1f"
          }
        },
        {
          "ruleId": "js-express-without-helmet",
          "level": "note",
          "message": {
            "text": "Express Not Using Helmet"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/demo/server_gallery/app.js"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 13,
                  "endLine": 6,
                  "endColumn": 22,
                  "snippet": {
                    "text": "express()"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "app"
                }
              ]
            }
          ],
          "fingerprints": {
            "precise_sink_and_sink_function": "816c8958334ec2bd8cc7a6036ad3186e"
          }
        }
      ]
    }
  ]
}
